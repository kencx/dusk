package views

import (
	"github.com/kencx/dusk"
	"github.com/kencx/dusk/filters"
	"github.com/kencx/dusk/page"
	"github.com/kencx/dusk/ui/partials"
	"github.com/kencx/dusk/ui/shared"
	"net/http"
)

type Tag struct {
	tag     dusk.Tag
	page    page.Page[dusk.Book]
	filters filters.Base
	shared.Base
}

func NewTag(base shared.Base, tag dusk.Tag, page page.Page[dusk.Book], filters filters.Base, err error) *Tag {
	base.Err = err
	return &Tag{tag, page, filters, base}
}

func (v *Tag) Render(rw http.ResponseWriter, r *http.Request) {
	v.Html().Render(r.Context(), rw)
}

templ (v *Tag) Html() {
	@v.Base.Html() {
		<div>
			if v.Err == dusk.ErrDoesNotExist {
				@partials.NotFound()
			} else {
				<div class="tag__details">
					<div class="header">
						<h2>{ v.tag.Name }</h2>
					</div>
				</div>
				@partials.Library(v.page, v.filters, v.Err)
			}
		</div>
	}
}
