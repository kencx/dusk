package views

import (
	"github.com/kencx/dusk"
	"github.com/kencx/dusk/filters"
	"github.com/kencx/dusk/page"
	"github.com/kencx/dusk/ui/partials"
	"github.com/kencx/dusk/ui/shared"
	"net/http"
)

type Author struct {
	author  dusk.Author
	page    page.Page[dusk.Book]
	filters filters.Base
	shared.Base
}

func NewAuthor(base shared.Base, author dusk.Author, page page.Page[dusk.Book], filters filters.Base, err error) *Author {
	base.Err = err
	return &Author{author, page, filters, base}
}

func (v *Author) Render(rw http.ResponseWriter, r *http.Request) {
	v.Html().Render(r.Context(), rw)
}

templ (v *Author) Html() {
	@v.Base.Html() {
		<div>
			if v.Err == dusk.ErrDoesNotExist {
				@partials.NotFound()
			} else {
				<div class="author__details">
					<div class="header">
						<h2>{ v.author.Name }</h2>
					</div>
				</div>
				@partials.Library(v.page, v.filters, v.Err)
			}
		</div>
	}
}
