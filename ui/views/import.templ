package views

import (
	"net/http"

	"github.com/kencx/dusk/ui/partials"
	"github.com/kencx/dusk/ui/shared"
)

var (
	ImportTabs = partials.TabGroup{
		RootPath: "/import",
		Order:    []string{"search", "upload", "manual", "goodreads", "calibre"},
		Tabs: []partials.Tab{
			{
				Name:      "Search",
				Link:      "search",
				Component: searchForm(),
			},
			{
				Name:      "Upload File",
				Link:      "upload",
				Component: uploadForm(),
			},
			{
				Name:      "Manual Entry",
				Link:      "manual",
				Component: manualEntryForm(),
			},
			{
				Name:      "Goodreads",
				Link:      "goodreads",
				Component: goodreadsForm(),
			},
			{
				Name:      "Calibre",
				Link:      "calibre",
				Component: calibreForm(),
			},
		},
	}
)

type ImportIndex struct {
	defaultTab string
	Tabs       partials.TabGroup
	shared.Base
}

func NewImportIndex(base shared.Base, defaultTab string, err error) *ImportIndex {
	base.Err = err
	return &ImportIndex{
		defaultTab: defaultTab,
		Tabs:       ImportTabs,
		Base:       base,
	}
}

func (v *ImportIndex) Render(rw http.ResponseWriter, r *http.Request) {
	v.Html().Render(r.Context(), rw)
}

templ (v *ImportIndex) Html() {
	@v.Base.Html() {
		<h2>Add Books</h2>
		@partials.Tabs(v.Tabs, v.defaultTab)
	}
}

templ calibreForm() {
	<form action="/import/calibre" method="POST">
		<div class="filedrop-container">
			<input id="calibre" type="file" webkitdirectory directory/>
			<small></small>
		</div>
		<button type="submit">Submit</button>
	</form>
}

templ ImportError(err error) {
	if err != nil {
		<div class="card error">
			switch err {
				default:
					<p>An error occurred. Please check the logs for more information.</p>
			}
		</div>
	}
}
