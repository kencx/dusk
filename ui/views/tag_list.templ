package views

import (
	"net/http"
	"strconv"
	"path"

	"github.com/kencx/dusk"
	"github.com/kencx/dusk/ui/partials"
)

type TagList struct {
	tags dusk.Tags
	BaseView
}

func NewTagList(bv BaseView, tags dusk.Tags, err error) *TagList {
	bv.err = err
	return &TagList{tags, bv}
}

func (v *TagList) Render(rw http.ResponseWriter, r *http.Request) {
	v.Html().Render(r.Context(), rw)
}

templ (v *TagList) Html() {
	@v.BaseView.Html() {
		<h2>Tags</h2>
		if v.err == dusk.ErrNoRows {
			@partials.Empty()
		} else if v.tags != nil {
			@partials.ItemSearch("/t/search", ".list")
			<div class="list">
				@TagSearchResults(v.tags, v.err)
			</div>
		}
	}
}

templ TagSearchResults(tags dusk.Tags, err error) {
	<div class="list__metadata">
		{ strconv.Itoa(len(tags)) }
		if len(tags) == 1 {
			tag
		} else {
			tags
		}
	</div>
	<div class="list__tag-view">
		@partials.ItemSearchResults(nil, err) {
			<ul>
				for _, tag := range tags {
					@listTag(tag)
				}
			</ul>
		}
	</div>
}

templ listTag(tag *dusk.Tag) {
	<li>
		<a href={ templ.URL(path.Join("t", tag.Slugify())) }>
			{ tag.Name }
		</a>
	</li>
}
