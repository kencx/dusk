package views

import (
	"net/http"
	"path"

	"github.com/kencx/dusk"
	"github.com/kencx/dusk/page"
	"github.com/kencx/dusk/ui/partials"
	"github.com/kencx/dusk/ui/shared"
)

type TagList struct {
	page page.Page[dusk.Tag]
	shared.Base
}

func NewTagList(base shared.Base, page page.Page[dusk.Tag], err error) *TagList {
	base.Err = err
	return &TagList{page, base}
}

func (v *TagList) Render(rw http.ResponseWriter, r *http.Request) {
	v.Html().Render(r.Context(), rw)
}

templ (v *TagList) Html() {
	@v.Base.Html() {
		<h2>Tags</h2>
		if v.page.Empty() {
			@partials.Empty()
		} else {
			@partials.ItemSearch("/t/search", ".list")
			<div class="list">
				@TagSearchResults(v.page, v.Err)
			</div>
		}
	}
}

templ TagSearchResults(page page.Page[dusk.Tag], err error) {
	@partials.ItemSearchResults(page, "/t/search", ".list__tag-view", err) {
		<div class="list__tag-view">
			<ul>
				for _, tag := range page.Items {
					@listTag(tag)
				}
			</ul>
		</div>
	}
}

templ listTag(tag dusk.Tag) {
	<li>
		<a href={ templ.URL(path.Join("t", tag.Slugify())) }>
			{ tag.Name }
		</a>
	</li>
}
