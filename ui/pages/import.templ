package pages

import (
    "dusk/ui/common"
	"net/http"
)

type ImportViewModel struct {
	Tab string
	ViewModel
}

func NewImportViewModel(tab string, err error) ImportViewModel {
	return ImportViewModel{Tab: tab, ViewModel: NewViewModel(err)}
}

func (m ImportViewModel) Render(rw http.ResponseWriter, r *http.Request) {
	m.Html().Render(r.Context(), rw)
}

func (m ImportViewModel) RenderError(rw http.ResponseWriter, r *http.Request, err error) {
	if err != nil {
		m.ErrorMessage = err.Error()
	}
	m.Html().Render(r.Context(), rw)
}

templ Tab(tab string) {
    switch tab {
        case "openlibrary":
            <div class="tab-list" role="tablist">
                <button hx-get="/import?tab=openlibrary" class="selected" role="tab" aria-selected="true" aria-controls="tab-content">OpenLibrary</button>
                <button hx-get="/import?tab=goodreads" role="tab" aria-selected="false" aria-controls="tab-content">Goodreads</button>
                <button hx-get="/import?tab=calibre" role="tab" aria-selected="false" aria-controls="tab-content">Calibre</button>
            </div>

            <div id="tab-content" role="tabpanel" class="tab-content">
                <form action="/import/openlibrary" method="POST">
                <input id="openlibrary" name="openlibrary" required />
                <small>Import from OpenLibrary</small>
                <br/>
                <button type="submit">Submit</button>
                </form>
            </div>

        case "goodreads":
            <div class="tab-list" role="tablist">
                <button hx-get="/import?tab=openlibrary" role="tab" aria-selected="false" aria-controls="tab-content">OpenLibrary</button>
                <button hx-get="/import?tab=goodreads" class="selected" role="tab" aria-selected="true" aria-controls="tab-content">Goodreads</button>
                <button hx-get="/import?tab=calibre" role="tab" aria-selected="false" aria-controls="tab-content">Calibre</button>
            </div>

            <div id="tab-content" role="tabpanel" class="tab-content">
                <form action="/import/goodreads" method="POST">
                <input id="goodreads" name="goodreads" required />
                <small>Import from Goodreads</small>
                <br/>
                <button type="submit">Submit</button>
                </form>
            </div>

        case "calibre":
            <div class="tab-list" role="tablist">
                <button hx-get="/import?tab=openlibrary" role="tab" aria-selected="false" aria-controls="tab-content">OpenLibrary</button>
                <button hx-get="/import?tab=goodreads" role="tab" aria-selected="false" aria-controls="tab-content">Goodreads</button>
                <button hx-get="/import?tab=calibre" class="selected" role="tab" aria-selected="true" aria-controls="tab-content">Calibre</button>
            </div>

            <div id="tab-content" role="tabpanel" class="tab-content">
                <form action="/import/calibre" method="POST">
                    <input id="calibre" name="calibre" required />
                    <small>Import from Calibre</small>
                    <br/>
                    <button type="submit">Submit</button>
                </form>
            </div>
    }
}

templ (m ImportViewModel) Html() {
    @common.Base() {
        <h2>Import Book</h2>

		if m.ErrorMessage != "" {
			<p>{m.ErrorMessage}</p>
		}

        <div id="tabs" hx-target="this" hx-swap="innerHTML">
            @Tab(m.Tab)
        </div>
    }
}
