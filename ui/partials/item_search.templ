package partials

import (
	"fmt"
	"github.com/kencx/dusk/page"
	"github.com/kencx/dusk/ui/partials/icons"
	"strconv"
)

templ ItemSearch(path, target string) {
	@HtmxError()
	<div class="search__toolbar">
		<input
			class="search"
			id="search"
			name="q"
			placeholder="Search"
			hx-get={ path }
			hx-target={ target }
			hx-params="*"
			hx-swap="innerHTML"
			hx-trigger="input changed delay:500ms, search"
			hx-indicator=".spinner"
		/>
		@filterButtons(path, target)
	</div>
	<div class="spinner" aria-busy="true"></div>
}

templ filterButtons(path, target string) {
	<div class="actions">
		<button
			class="icon"
			hx-get={ path }
			hx-target={ target }
			data-tooltip="Table view"
		>
			@icons.Table()
		</button>
		<button
			class="icon"
			hx-get={ path }
			hx-target={ target }
			data-tooltip="Sort"
		>
			@icons.SortAsc()
		</button>
		<button
			class="icon"
			hx-get={ path }
			hx-target={ target }
			data-tooltip="Filter"
		>
			@icons.Filter()
		</button>
	</div>
}

templ ItemSearchResults[T any](page page.Page[T], path, target string, err error) {
	if page.Empty() {
		<p class="message">No items found!</p>
	} else if err != nil {
		@DefaultError()
	} else {
		@pageMetadata(page, path, target)
		{ children... }
		if page.TotalCount > page.Limit {
			@pageMetadata(page, path, target)
		}
	}
}

templ pageMetadata[T any](page page.Page[T], path, target string) {
	<div id="search__metadata" class="search__metadata">
		<div class="search__page_counter">
			if page.TotalCount == 1 {
				Showing 1 item
			} else {
				Showing
				<span id="item-counter">
					{ fmt.Sprintf("%s - %s",
          strconv.Itoa(page.FirstRowNo),
          strconv.Itoa(page.LastRowNo) ) }
				</span>
				of { strconv.Itoa(page.TotalCount) } items
			}
		</div>
		<div id="search__page_buttons" class="search__page_buttons">
			@pageButtons(page, path, target)
		</div>
	</div>
}

templ pageButtons[T any](page page.Page[T], path, target string) {
	if !page.IsFirst() {
		<button
			class="icon"
			hx-get={ fmt.Sprintf("%s?%s", path, page.First()) }
			hx-swap="outerHTML"
			hx-target={ target }
			hx-select={ target }
			hx-select-oob="#search__page_buttons,#item-counter"
		>
			{ "<<" }
		</button>
		<button
			class="icon"
			hx-get={ fmt.Sprintf("%s?%s", path, page.Previous()) }
			hx-swap="outerHTML"
			hx-target={ target }
			hx-select={ target }
			hx-select-oob="#search__page_buttons,#item-counter"
		>
			// @icons.Previous()
			{ "<" }
		</button>
	}
	if !page.IsLast() {
		<button
			class="icon"
			hx-get={ fmt.Sprintf("%s?%s", path, page.Next()) }
			hx-swap="outerHTML"
			hx-target={ target }
			hx-select={ target }
			hx-select-oob="#search__page_buttons,#item-counter"
		>
			// @icons.Next()
			{ ">" }
		</button>
		<button
			class="icon"
			hx-get={ fmt.Sprintf("%s?%s", path, page.Last()) }
			hx-swap="outerHTML"
			hx-target={ target }
			hx-select={ target }
			hx-select-oob="#search__page_buttons,#item-counter"
		>
			{ ">>" }
		</button>
	}
}
