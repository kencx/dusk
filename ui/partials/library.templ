package partials

import (
	"github.com/kencx/dusk"
	"github.com/kencx/dusk/filters"
	"github.com/kencx/dusk/page"
)

templ Library(page page.Page[dusk.Book], filters filters.Base, err error) {
	if page.Empty() {
		@Empty()
	} else {
		@ItemSearch("/b/search", ".library__results", filters)
		<div class="library__results">
			@BookSearchResults(page, filters, err)
		</div>
	}
}

templ BookSearchResults(page page.Page[dusk.Book], filters filters.Base, err error) {
	if ! filters.Empty() {
		@ItemSearchResults(page, "/b/search", ".books-grid", err) {
			<div class="books-grid" id="booksGrid">
				for _, book := range page.Items {
					@bookCard(&book)
				}
			</div>
		}
	} else {
		@ItemSearchResults(page, "/b/search", ".books-table", err) {
			<div class="books-table active" id="booksTable">
				@Table(page)
			</div>
		}
	}
}

// partial with OOB swaps to handle sort direction, filters, view mode etc.
templ BookSearchResultsWithOOB(page page.Page[dusk.Book], filters filters.Base, err error) {
	@BookSearchResults(page, filters, err)
	@sortDirectionButton("/b/search", ".library__results", filters)
}
