PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS book (
    id            INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    title         TEXT NOT NULL,
    subtitle      TEXT,

    numOfPages    INTEGER DEFAULT 0,
    progress      INTEGER DEFAULT 0,
    rating        INTEGER DEFAULT 0,

    publisher     TEXT,
    datePublished TIMESTAMP,

    description   TEXT,
    notes         TEXT,
    cover         TEXT,

    dateStarted   TIMESTAMP,
    dateCompleted TIMESTAMP,
    dateAdded     TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS author (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE
);

-- M to M
CREATE TABLE IF NOT EXISTS book_author_link (
    book INTEGER NOT NULL REFERENCES book(id) ON DELETE CASCADE,
    author INTEGER NOT NULL REFERENCES author(id) ON DELETE RESTRICT,
    PRIMARY KEY(book, author)
);

CREATE TABLE IF NOT EXISTS tag (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE
);

-- M to M
CREATE TABLE IF NOT EXISTS book_tag_link (
    book INTEGER NOT NULL REFERENCES book(id) ON DELETE CASCADE,
    tag INTEGER NOT NULL REFERENCES tag(id) ON DELETE CASCADE,
    PRIMARY KEY(book, tag)
);

-- M to 1
CREATE TABLE IF NOT EXISTS series (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    bookId INTEGER NOT NULL REFERENCES book(id) ON DELETE CASCADE,
    name TEXT NOT NULL
);

-- 1 to M
CREATE TABLE IF NOT EXISTS isbn10 (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    bookId INTEGER NOT NULL REFERENCES book(id) ON DELETE CASCADE,
    isbn TEXT NOT NULL UNIQUE
);

-- 1 to M
CREATE TABLE IF NOT EXISTS isbn13 (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    bookId INTEGER NOT NULL REFERENCES book(id) ON DELETE CASCADE,
    isbn TEXT NOT NULL UNIQUE
);

-- 1 to M
CREATE TABLE IF NOT EXISTS format (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    bookId INTEGER NOT NULL REFERENCES book(id) ON DELETE CASCADE,
    filepath TEXT NOT NULL UNIQUE
);
